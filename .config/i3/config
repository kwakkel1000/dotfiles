# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: Ubuntu Mono Nerd Font 10 
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8


# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --color=232323 --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec_always --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec wezterm

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+space exec "rofi -modi drun -show drun -config .config/rofi/config.rasi"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# PRINTSCREEN
bindsym --release Print exec "scrot ~/Pictures/%Y-%m-%d-%H%M%S.png"
bindsym --release $mod+Print exec "scrot -s ~/Pictures/%Y-%m-%d-%H%M%S.png"

# LOCKING
# suspend after 15 minutes
exec_always --no-startup-id xset s 900
exec_always --no-startup-id xset dpms 0 900 900
# lock when suspended
exec_always --no-startup-id xss-lock -l -n ~/.dotfiles/dim.sh -- ~/.dotfiles/lock.sh 

## don't call the lock screen, turn screen off which triggers the lockscreen (above)
#bindsym $mod+l exec "xset dpms force off"

#bindsym $mod+l exec ~/.dotfiles/lock.sh
bindsym $mod+l exec "i3lock --color=232323"
#bindsym $mod+l exec "i3lock --color=232323 & sleep 5 && systemctl suspend"
#bindsym $mod+l exec "i3lock --color=232323 & sleep 5 && xset dpms force off"
#exec --no-startup-id xautolock -time 15 -locker "i3lock --color=232323 & sleep 5 && xset dpms force off"
#exec_always --no-startup-id xautolock -time 15 -locker "i3lock --color=232323 & sleep 5 && xset dpms force off"

# Brightness
bindsym XF86MonBrightnessUp exec brightnessctl s +10%
bindsym XF86MonBrightnessDown exec brightnessctl s 10%-

# change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
#bindsym $mod+l focus up
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+t layout toggle splith tabbed

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move focused workspace between monitors
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less move workspace to output left

# restart polybar
bindsym $mod+p exec --no-startup-id $HOME/.config/polybar/launch.sh


workspace_auto_back_and_forth yes

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2 slack"
set $ws3 "3 note"
set $ws4 "4 web"
set $ws5 "5 web"
set $ws6 "6 web"
set $ws7 "7 web"
set $ws8 "8 web"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13 plex"
set $ws14 "14 kvm"
set $ws15 "15 ansible"
set $ws16 "16 term"
set $ws17 "17 term"
set $ws18 "18 code"
set $ws19 "19 code"
set $ws20 "20 postman"

set $laptop_display eDP-1
set $second_display DP-3-2 DP-3-6
set $third_display DP-3-3 DP-3-5

workspace 1 output $laptop_display
workspace "2 slack" output $laptop_display
workspace "3 note" output $laptop_display
workspace "4 web" output $second_display
workspace "5 web" output $laptop_display
workspace "6 web" output $second_display
workspace "7 web" output $second_display
workspace "8 web" output $third_display
workspace 9 output $second_display
workspace 10 output $third_display
workspace 11 output primary
workspace 12 output primary
workspace "13 plex" output $third_display
workspace "14 kvm" output primary
workspace "15 ansible" output primary
workspace "16 term" output primary
workspace "17 term" output $second_display
workspace "18 code" output $second_display
workspace "19 code" output $second_display
workspace "20 postman" output $third_display

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Ctrl+1 workspace number $ws11
bindsym $mod+Ctrl+2 workspace number $ws12
bindsym $mod+Ctrl+3 workspace number $ws13
bindsym $mod+Ctrl+4 workspace number $ws14
bindsym $mod+Ctrl+5 workspace number $ws15
bindsym $mod+Ctrl+6 workspace number $ws16
bindsym $mod+Ctrl+7 workspace number $ws17
bindsym $mod+Ctrl+8 workspace number $ws18
bindsym $mod+Ctrl+9 workspace number $ws19
bindsym $mod+Ctrl+0 workspace number $ws20


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+Ctrl+1 move container to workspace number $ws11
bindsym $mod+Shift+Ctrl+2 move container to workspace number $ws12
bindsym $mod+Shift+Ctrl+3 move container to workspace number $ws13
bindsym $mod+Shift+Ctrl+4 move container to workspace number $ws14
bindsym $mod+Shift+Ctrl+5 move container to workspace number $ws15
bindsym $mod+Shift+Ctrl+6 move container to workspace number $ws16
bindsym $mod+Shift+Ctrl+7 move container to workspace number $ws17
bindsym $mod+Shift+Ctrl+8 move container to workspace number $ws18
bindsym $mod+Shift+Ctrl+9 move container to workspace number $ws19
bindsym $mod+Shift+Ctrl+0 move container to workspace number $ws20


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#}

##=================================================##
#      *** Workspace specific settings ***          #
##=================================================##
#assign [class="barrier"] $ws1
assign [class="Arandr"] $ws1
assign [class="Slack"] $ws2
assign [class="obsidian"] $ws3
assign [class="firefox"] $ws4
assign [class="draw.io"] $ws6
assign [class="Virt-manager"] $ws16
assign [class="Plex"] $ws13


#autostart
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always --no-startup-id exec "sleep 5; autorandr --change"
exec --no-startup-id i3-msg 'workspace 1; exec wezterm start htop; workspace 1'
#exec --no-startup-id nice -n 19 barrier
#exec --no-startup-id nice -n 19 input-leap
exec --no-startup-id arandr
exec --no-startup-id slack
#exec --no-startup-id i3-msg 'workspace 3; exec wezterm start nvim ~/obsidian/fortanix; workspace 3'
#exec --no-startup-id obsidian
exec firefox;
# exec --no-startup-id i3-msg 'workspace 4; exec firefox; workspace 4;'
#exec --no-startup-id drawio
#exec --no-startup-id virt-manager
#exec_always --no-startup-id compton --config ~/.config/compton.conf
exec_always --no-startup-id exec "sleep 5; nitrogen --restore"

